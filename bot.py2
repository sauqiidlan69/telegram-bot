import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# ====== Your API keys ======
TELEGRAM_BOT_TOKEN = '7041415171:AAG3KK3Va9yOeiCHAAwQOta0SBqeb664aZs'
OPENROUTER_API_KEY = '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'

# ====== Handle incoming messages ======
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text
    points = [point.strip('-â€¢ ').strip() for point in user_input.split('\n') if point.strip()]

    prompt = (
        "You are a professional engineer writing report. "
        "Given the following sentences, write a serious, solid, easy to understand, and fluent paragraph. "
        "Expand on the ideas naturally, ensuring the paragraph flows well and sounds polished. "
        "Seperate into 4 section with each section have minimum 3 bullet points. "
        "The sections are Issues, What have been done, Results and Recommended Action. "
        "Each bullet point contain no more than 15 words. "
        f"Points: {', '.join(points)}"
    )

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "your_website.com",  # optional
        "X-Title": "ERP_Easy_Bot"
    }
    data = {
        "model": "mistralai/mistral-7b-instruct",  # Free model
        "messages": [{"role": "user", "content": prompt}]
    }
    response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=data)
    result = response.json()

    try:
        paragraph = result['choices'][0]['message']['content'].strip()
    except (KeyError, IndexError):
        paragraph = "Sorry, there was an error generating the paragraph."

    await update.message.reply_text(paragraph)

# ====== Start the bot ======
app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
app.run_polling()
